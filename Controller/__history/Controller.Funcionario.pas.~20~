unit Controller.Funcionario;

interface
uses Horse, System.JSON, System.SysUtils, Model.Funcionario, System.Classes, FIBDatabase, pFIBDatabase, FIBQuery, IniFiles,
  pFIBQuery,pFIBDataSet, DataSet.Serialize, Data.DB;

procedure Register;
implementation

uses Unt_DM;

procedure ListarFuncionario(Req: THorseRequest; Res: THorseResponse);
var
Func : TFuncionario;
_Qry : TpFIBDataSet;
erro : String;
ArrayFuncionario : TJSONArray;

begin
    try
      Func := TFuncionario.Create;
   except
       res.Send('Erro ao conectar com o banco').Status(501);
       exit;
   end;

   try
      _Qry := Func.ListarFuncionario('', erro);
      ArrayFuncionario := _Qry.ToJsonArray();
      res.Send<TJSONArray>(ArrayFuncionario);

   finally
      _qry.Free;
      Func.Free;
   end;
end;
procedure CadastrarFuncionario(Req: THorseRequest; Res: THorseResponse);
begin
   Res.Send('Cadastrar Funcionario');
end;
procedure DeletarFuncionario(Req: THorseRequest; Res: THorseResponse);
begin
   Res.Send('Deletar Funcionario');
end;

procedure Register;
begin
  THorse.Get('/Funcionario', ListarFuncionario);
  THorse.Post('/Funcionario', CadastrarFuncionario);
  THorse.Delete('/Funcionario', DeletarFuncionario);


end;




end.

